@page "/SummaryPage/{code}"
@using Newtonsoft.Json
@using CTMS.Share.Helpers
@layout EmptyLayout
@inject UploadFileService UploadFileService
@inject NavigationManager NavigationManager
@inject ExcleService ExcleService

@inject NavigationManager NavigationManager
@inject CurrentUserService CurrentUserService
@inject AuthenticationStateHelper AuthenticationStateHelper
@inject AuthenticationStateProvider authStateProvider

<PageTitle>報告摘要</PageTitle>

@if (string.IsNullOrEmpty(RoleMessage) == false)
{
    <div class="alert alert-danger" role="alert">
        @RoleMessage
    </div>
}
else
{
<div>
    <div class="page-top">
        <button class="back-btn" @onclick=OnBack>&lt; 上頁</button>
        <span class="page-title">報告摘要</span>
        <button class="upload-btn" @onclick=OnSave>儲存</button>
    </div>

    <div class="p-5">
        <SummaryView Code=@Code CTMSModel=@CTMSModel />
    </div>
</div>
}

<MessageBox Height="@MessageBox.Height" Width="@MessageBox.Width"
            IsVisible="@MessageBox.IsVisible"
            Title="@MessageBox.Title" Message="@MessageBox.Body"
            Callback="MessageBox.MessageDelegate" />

<ConfirmBox Height="@ConfirmMessageBox.Height" Width="@ConfirmMessageBox.Width"
            IsVisible="@ConfirmMessageBox.IsVisible"
            Title="@ConfirmMessageBox.Title" Message="@ConfirmMessageBox.Body"
            Callback="ConfirmMessageBox.ConfirmDelegate" />

<DialogBackground />


@code {
    [Parameter]
    public string Code { get; set; }

    NextGenerationSportsCTMSModel CTMSModel = new();
    HomePageModel HomePageModel = new();
    string imagefile = "";

    ConfirmBoxModel ConfirmMessageBox { get; set; } = new ConfirmBoxModel();
    MessageBoxModel MessageBox { get; set; } = new MessageBoxModel();
    string RoleMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var checkResult = await AuthenticationStateHelper
            .Check(authStateProvider, NavigationManager);
        if (checkResult == true)
        {
            if (AuthenticationStateHelper.CheckAccessPage(MagicObjectHelper.ROLE報告摘要輸入) == false)
            {
                RoleMessage = MagicObjectHelper.你沒有權限存取此頁面;
            }
            else
            {
                var Athlete = await UploadFileService.GetAsync(Code);
                CTMSModel = JsonConvert
                .DeserializeObject<NextGenerationSportsCTMSModel>(Athlete.ExcelData);

                var fileList = JsonConvert
                .DeserializeObject<List<FileListNodeModel>>(Athlete.FilesData);
                imagefile = FileListHelper.GetPhoto(fileList);
                // imagefile = Path.Combine(Directory.GetCurrentDirectory(), imagefile);
            }
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            HomePageModel = CTMSModel.Home首頁2;
            // CTMSModel.報告摘要Model.基因體學檢查分析結果 = "基因體學檢查分析結果"; 
            StateHasChanged();
        }
    }

    async Task OnSave()
    {
        var json = JsonConvert.SerializeObject(CTMSModel);
        var Athlete = await UploadFileService.GetAsync(Code);
        Athlete.ExcelData = json;

        await UploadFileService.UpdateAsync(Code, Athlete);
        NavigationManager.NavigateTo($"/DashboardHome/{Code}");
    }

    void OnBack()
    {
        NavigationManager.NavigateTo("/");
    }

    void OnBody()
    {
        NavigationManager.NavigateTo($"/Body/{Code}");
    }

    void OnMetabolite()
    {
        NavigationManager.NavigateTo($"/Metabolite/{Code}");
    }

    void OnMentalToughness()
    {
        NavigationManager.NavigateTo($"/MentalToughness/{Code}");
    }

    void OnGenomics()
    {
        NavigationManager.NavigateTo($"/Genomics/{Code}");
    }

    void OnCardiopulmonary()
    {
        NavigationManager.NavigateTo($"/Cardiopulmonary/{Code}");
    }

    void OnMotionAnalysis()
    {
        NavigationManager.NavigateTo($"/MotionAnalysis/{Code}");
    }

    void OnRecommendation()
    {
        NavigationManager.NavigateTo($"/Recommendation/{Code}");
    }

    void OnBlood()
    {
        NavigationManager.NavigateTo($"/Blood/{Code}");
    }
}