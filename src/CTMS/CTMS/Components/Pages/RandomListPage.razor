@page "/RandomList"
@using Newtonsoft.Json
@using CTMS.Share.Helpers
@layout EmptyLayout
@inject UploadFileService UploadFileService
@inject NavigationManager NavigationManager
@inject ExcleService ExcleService

@inject NavigationManager NavigationManager
@inject CurrentUserService CurrentUserService
@inject AuthenticationStateHelper AuthenticationStateHelper
@inject AuthenticationStateProvider authStateProvider
@inject BrowseAthleteService BrowseAthleteService
@inject CurrentAthleteExamine CurrentAthleteExamine
@inject RandomListService RandomListService

<PageTitle>隨機清單</PageTitle>
@foreach (var item in NCKUH)
{
    <div class="alert alert-danger" role="alert">
        @item
    </div>
}

<MessageBox Height="@MessageBox.Height" Width="@MessageBox.Width"
            IsVisible="@MessageBox.IsVisible"
            Title="@MessageBox.Title" Message="@MessageBox.Body"
            Callback="MessageBox.MessageDelegate" />

<ConfirmBox Height="@ConfirmMessageBox.Height" Width="@ConfirmMessageBox.Width"
            IsVisible="@ConfirmMessageBox.IsVisible"
            Title="@ConfirmMessageBox.Title" Message="@ConfirmMessageBox.Body"
            Callback="ConfirmMessageBox.ConfirmDelegate" />

<DialogBackground />


@code {
    ConfirmBoxModel ConfirmMessageBox { get; set; } = new ConfirmBoxModel();
    MessageBoxModel MessageBox { get; set; } = new MessageBoxModel();
    List<string> NCKUH = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        await RandomListService.InitialAsync();
        NCKUH.Clear();
        foreach (var item in RandomListService.RandomList
            .Items.Where(x=>x.SubjectNo!="").Take(10))
        {
            NCKUH.Add(JsonConvert.SerializeObject(item));
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
        }

    }

}