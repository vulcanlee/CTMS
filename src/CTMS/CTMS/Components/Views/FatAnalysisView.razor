@page "/Fat"
@using CTMS.Share.Helpers
@using Newtonsoft.Json
@layout EmptyLayout
@inject UploadFileService UploadFileService
@inject BrowseAthleteService BrowseAthleteService
@inject CurrentAthleteExamine CurrentAthleteExamine

<PageTitle>身體組成-脂肪分析</PageTitle>

<div class="container-custom">
    <div class="header">
        <h1>
            身體組成-脂肪分析
            @foreach (var item in CurrentAthleteExamine.ExamineList)
            {
                string selected = "";
                if (item == CurrentAthleteExamine.ExamineTime)
                {
                    selected = "btn-primary fw-bolder";
                }
                else
                {
                    selected = "btn-outline-primary";
                }
                <span class="mx-3 btn @selected"
                      @onclick="async () => await OnChangeExamineAsync(item)">@item</span>
            }
        </h1>
    </div>
    <div class="metrics">
        <div class="metric-box">
            <div class="metric-title">內臟脂肪百分位</div>
            <div class="metric-value">@QualityModel.VisceralFatPercentile內臟脂肪百分位</div>
        </div>
        <div class="metric-box">
            <div class="metric-title">皮下脂肪百分位</div>
            <div class="metric-value">@QualityModel.SubcutaneousFatPercentile皮下脂肪百分位</div>
        </div>
        <div class="metric-box">
            <div class="metric-title">腰圍百分位</div>
            <div class="metric-value">@QualityModel.WaistCircumferencePercentile腰圍百分位</div>
        </div>
        <div class="metric-box">
            <div class="metric-title">代謝失調風險</div>
            <div class="metric-value">@QualityModel.MetabolicSyndromeRisk代謝失調風險</div>
        </div>
        <div class="metric-box">
            <div class="metric-title">脊椎骨架</div>
            <div class="metric-value">@QualityModel.SpineSkeleton脊椎骨架</div>
        </div>
    </div>
    <div class="main-content">
        <div class="chart-panel">
            <div>
                <SfChart Width="800px" Height="940px" EnableAnimation="false">
                    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
                                       LabelPlacement="LabelPlacement.OnTicks"
                                       Coefficient="65"
                                       LabelPosition="AxisPosition.Outside"
                                       LabelIntersectAction="LabelIntersectAction.Rotate90">
                        <ChartAxisLabelStyle Size="28" />
                    </ChartPrimaryXAxis>
                    <ChartPrimaryYAxis LabelIntersectAction="LabelIntersectAction.Rotate90"
                                       Maximum="100" Minimum="0">
                        <ChartAxisLabelStyle Size="18" />
                    </ChartPrimaryYAxis>
                    <ChartTooltipSettings Enable="true">
                        <ChartTooltipTextStyle Size="20px" />
                    </ChartTooltipSettings>
                    <ChartSeriesCollection>
                        <ChartSeries DataSource="@ChartDatas1" XName="X" YName="Y" Width="3"
                                     Fill="Red" Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                            <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                            <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7" Shape="ChartShape.Rectangle"></ChartMarker>
                        </ChartSeries>
                    </ChartSeriesCollection>
                </SfChart>
            </div>
            <div class="chart-label">肌群脂肪變性百分位</div>
        </div>
        <div>
            <div>
                <img src="@imageMuscle5" class="muscle5-img">
            </div>
            <div class="info-panel">
                <table class="info-table">
                    <tr><td class="cell-title-name">身高(cm)</td><td>@QualityModel.Height身高</td></tr>
                    <tr><td class="cell-title-name">體重(Kg)</td><td>@QualityModel.Weight體重</td></tr>
                    <tr><td class="cell-title-name">BMI</td><td>@QualityModel.BMI</td></tr>
                    <tr><td class="cell-title-name">體脂率(%)</td><td>@QualityModel.BodyFatPercentage體脂率</td></tr>
                    <tr><td class="cell-title-name">基礎代謝率(kcal)</td><td>@QualityModel.BasalMetabolicRate基礎代謝率</td></tr>
                    <tr><td class="cell-title-name">每日消耗總熱量(kcal)</td><td>@QualityModel.TotalDailyEnergyExpenditure每日消耗總熱量</td></tr>
                    <tr><td class="cell-title-name">身體水分(L)</td><td>@QualityModel.BodyWater身體水分</td></tr>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Code { get; set; }

    public class ChartData
    {
        public string X { get; set; }
        public double Y { get; set; }
    }

    public List<ChartData> ChartDatas1 = new List<ChartData>();

    NextGenerationSportsCTMSModel CTMSModel = new();
    BodyFatAnalysis脂肪分析Model QualityModel = new();
    string imageMuscle5 = "";

    Athlete Athlete = new();
    List<FileListNodeModel> fileList = new List<FileListNodeModel>();

    protected override async Task OnInitializedAsync()
    {
        Athlete = await BrowseAthleteService.GetByCodeAsync(Code, CurrentAthleteExamine);
        (CTMSModel, fileList) = await BrowseAthleteService
        .GetCurrentDataAsync(Athlete, CurrentAthleteExamine);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
        }
        QualityModel = CTMSModel.BodyFatAnalysis脂肪分析Model;

        imageMuscle5 = FileListHelper.GetMuscleFat(fileList);
        BuildChart();
        StateHasChanged();
    }

    async Task OnChangeExamineAsync(string examineTime)
    {
        (CTMSModel, fileList) = await BrowseAthleteService
        .ChangeCurrentDataAsync(Athlete, CurrentAthleteExamine, examineTime);

        imageMuscle5 = FileListHelper.GetMuscleFat(fileList);
        BuildChart();
        StateHasChanged();
    }

    void BuildChart()
    {
        var mass1Model = QualityModel.FatDegenerationPercentileInMuscleGroups各肌群脂肪變性百分位RadarChartModel;
        ChartDatas1 = new List<ChartData>()
        {
            new ChartData{ X= "內斜肌_外斜肌_腹橫肌", Y= mass1Model.InternalObliqueExternalObliqueTransversusAbdominis內斜肌_外斜肌_腹橫肌.ToDouble() },
            new ChartData{ X= "腹直肌", Y= mass1Model.RectusAbdominis腹直肌.ToDouble() },
            new ChartData{ X= "腰方肌", Y= mass1Model.QuadratusLumborum腰方肌.ToDouble() },
            new ChartData{ X= "豎脊肌_多裂肌", Y= mass1Model.ErectorSpinaeMultifidus豎脊肌_多裂肌.ToDouble() },
            new ChartData{ X= "腰肌", Y= mass1Model.PsoasMuscle腰肌.ToDouble() },
        };
    }
}