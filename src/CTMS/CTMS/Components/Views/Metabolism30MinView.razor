@using Newtonsoft.Json
@layout EmptyLayout
@inject UploadFileService UploadFileService
@inject BrowseAthleteService BrowseAthleteService
@inject CurrentAthleteExamine CurrentAthleteExamine
@using CTMS.Share.Helpers

<PageTitle>代謝體運動後30 min</PageTitle>

<div>
    <div class="header">
        <h1>
            代謝體運動後30 min
            @foreach (var item in CurrentAthleteExamine.ExamineList)
            {
                string selected = "";
                if (item == CurrentAthleteExamine.ExamineTime)
                {
                    selected = "btn-primary fw-bolder";
                }
                else
                {
                    selected = "btn-outline-primary";
                }
                <span class="mx-3 btn @selected"
                      @onclick="async () => await OnChangeExamineAsync(item)">@item</span>
            }
        </h1>
    </div>

    <div class="container-custom">
        <div class="container m-auto mw-100">
            <div class="row">
                <div class="col-4">
                    <div class="metric-box">
                        <div class="metric-title">肌肉崩解</div>
                        <div class="metric-value">@代謝体分析.肌肉崩解</div>
                    </div>
                    <div>
                        <SfChart Width="100%" EnableAnimation="false">
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
                                               LabelPlacement="LabelPlacement.OnTicks"
                                               LabelPosition="AxisPosition.Outside"
                                               Coefficient="80"
                                               LabelIntersectAction="LabelIntersectAction.Rotate90">
                                <ChartAxisLabelStyle Size="20" />
                            </ChartPrimaryXAxis>
                            <ChartPrimaryYAxis LabelIntersectAction="LabelIntersectAction.Rotate90" />
                            <ChartTooltipSettings Enable="true">
                                <ChartTooltipTextStyle Size="20px" />
                            </ChartTooltipSettings>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@ChartDatas11" XName="X" YName="Y"
                                             Width="3" Fill="Red" Name="球員"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                                <ChartSeries DataSource="@ChartDatas13" XName="X" YName="Y"
                                             Width="3" Fill="#04b4f4" Name="職業平均"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                                <ChartSeries DataSource="@ChartDatas12" XName="X" YName="Y"
                                             Width="3" Fill="#4ca42c" Name="校隊平均"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                            </ChartSeriesCollection>
                            <ChartLegendSettings Visible="true" Position="LegendPosition.Bottom" />
                        </SfChart>
                    </div>
                </div>
                <div class="col-4">
                    <div class="metric-box">
                        <div class="metric-title">發炎反應</div>
                        <div class="metric-value">@代謝体分析.發炎反應</div>
                    </div>
                    <div>
                        <SfChart Width="100%" EnableAnimation="false">
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
                                               LabelPlacement="LabelPlacement.OnTicks"
                                               LabelPosition="AxisPosition.Outside"
                                               Coefficient="80"
                                               LabelIntersectAction="LabelIntersectAction.Rotate90">
                                <ChartAxisLabelStyle Size="20" />
                            </ChartPrimaryXAxis>
                            <ChartPrimaryYAxis LabelIntersectAction="LabelIntersectAction.Rotate90" />
                            <ChartTooltipSettings Enable="true">
                                <ChartTooltipTextStyle Size="20px" />
                            </ChartTooltipSettings>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@ChartDatas21" XName="X" YName="Y"
                                             Width="3" Fill="Red" Name="球員"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                                <ChartSeries DataSource="@ChartDatas23" XName="X" YName="Y"
                                             Width="3" Fill="#04b4f4" Name="職業平均"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                                <ChartSeries DataSource="@ChartDatas22" XName="X" YName="Y"
                                             Width="3" Fill="#4ca42c" Name="校隊平均"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                            </ChartSeriesCollection>
                            <ChartLegendSettings Visible="true" Position="LegendPosition.Bottom" />
                        </SfChart>
                    </div>
                </div>
                <div class="col-4">
                    <div class="metric-box">
                        <div class="metric-title">心血管風險</div>
                        <div class="metric-value">@代謝体分析.甲基化</div>
                    </div>
                    <div>
                        <SfChart Width="100%" EnableAnimation="false">
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
                                               LabelPlacement="LabelPlacement.OnTicks"
                                               LabelPosition="AxisPosition.Outside"
                                               Coefficient="80"
                                               LabelIntersectAction="LabelIntersectAction.Rotate90">
                                <ChartAxisLabelStyle Size="20" />
                            </ChartPrimaryXAxis>
                            <ChartPrimaryYAxis LabelIntersectAction="LabelIntersectAction.Rotate90" />
                            <ChartTooltipSettings Enable="true">
                                <ChartTooltipTextStyle Size="20px" />
                            </ChartTooltipSettings>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@ChartDatas31" XName="X" YName="Y"
                                             Width="3" Fill="Red" Name="球員"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                                <ChartSeries DataSource="@ChartDatas33" XName="X" YName="Y"
                                             Width="3" Fill="#04b4f4" Name="職業平均"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                                <ChartSeries DataSource="@ChartDatas32" XName="X" YName="Y"
                                             Width="3" Fill="#4ca42c" Name="校隊平均"
                                             Type="ChartSeriesType.Radar" DrawType="ChartDrawType.Line">
                                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                                    <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7"
                                                 Shape="ChartShape.Rectangle">
                                    </ChartMarker>
                                </ChartSeries>
                            </ChartSeriesCollection>
                            <ChartLegendSettings Visible="true" Position="LegendPosition.Bottom" />
                        </SfChart>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Code { get; set; }

    NextGenerationSportsCTMSModel CTMSModel = new();
    代謝体分析Model 代謝体分析 = new();

    public class ChartData
    {
        public string X { get; set; }
        public double Y { get; set; }
    }

    public List<ChartData> ChartDatas11 = new List<ChartData>();
    public List<ChartData> ChartDatas12 = new List<ChartData>();
    public List<ChartData> ChartDatas13 = new List<ChartData>();
    public List<ChartData> ChartDatas21 = new List<ChartData>();
    public List<ChartData> ChartDatas22 = new List<ChartData>();
    public List<ChartData> ChartDatas23 = new List<ChartData>();
    public List<ChartData> ChartDatas31 = new List<ChartData>();
    public List<ChartData> ChartDatas32 = new List<ChartData>();
    public List<ChartData> ChartDatas33 = new List<ChartData>();

    Athlete Athlete = new();
    List<FileListNodeModel> fileList = new List<FileListNodeModel>();

    protected override async Task OnInitializedAsync()
    {
        Athlete = await BrowseAthleteService.GetByCodeAsync(Code, CurrentAthleteExamine);
        (CTMSModel, fileList) = await BrowseAthleteService
        .GetCurrentDataAsync(Athlete, CurrentAthleteExamine);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
        }
        代謝体分析 = CTMSModel.代謝体分析;
        BuildChart();
        StateHasChanged();
    }

    async Task OnChangeExamineAsync(string examineTime)
    {
        (CTMSModel, fileList) = await BrowseAthleteService
        .ChangeCurrentDataAsync(Athlete, CurrentAthleteExamine, examineTime);

        StateHasChanged();
    }

    void BuildChart()
    {
        #region 肌肉能量及耗損
        var 肌肉能量及耗損 = 代謝体分析.肌肉能量及耗損;
        var 肌肉能量及耗損校隊平均 = 代謝体分析.肌肉能量及耗損_校隊平均;
        var 肌肉能量及耗損職業平均 = 代謝体分析.肌肉能量及耗損_職業平均;
        ChartDatas11 = new List<ChartData>()
        {
            new ChartData{ X= "1-Methylhistidine", Y= 肌肉能量及耗損.x1_Methylhistidine.ToDouble() },
            new ChartData{ X= "Isoleucine", Y= 肌肉能量及耗損.Isoleucine.ToDouble() },
            new ChartData{ X= "Valine", Y= 肌肉能量及耗損.Valine.ToDouble() },
            new ChartData{ X= "BCAAs", Y= 肌肉能量及耗損.BCAAs.ToDouble() },
            new ChartData{ X= "3-Methylhistidine", Y= 肌肉能量及耗損.x3_Methylhistidine.ToDouble() },
            new ChartData{ X= "Leucine", Y= 肌肉能量及耗損.Leucine.ToDouble() },
            new ChartData{ X= "Histidine", Y= 肌肉能量及耗損.Histidine.ToDouble() },
        };

        ChartDatas12 = new List<ChartData>()
        {
            new ChartData{ X= "1-Methylhistidine", Y= 肌肉能量及耗損校隊平均.x1_Methylhistidine.ToDouble() },
            new ChartData{ X= "Isoleucine", Y= 肌肉能量及耗損校隊平均.Isoleucine.ToDouble() },
            new ChartData{ X= "Valine", Y= 肌肉能量及耗損校隊平均.Valine.ToDouble() },
            new ChartData{ X= "BCAAs", Y= 肌肉能量及耗損校隊平均.BCAAs.ToDouble() },
            new ChartData{ X= "3-Methylhistidine", Y= 肌肉能量及耗損校隊平均.x3_Methylhistidine.ToDouble() },
            new ChartData{ X= "Leucine", Y= 肌肉能量及耗損校隊平均.Leucine.ToDouble() },
            new ChartData{ X= "Histidine", Y= 肌肉能量及耗損校隊平均.Histidine.ToDouble() },
        };

        ChartDatas13 = new List<ChartData>()
        {
            new ChartData{ X= "1-Methylhistidine", Y= 肌肉能量及耗損職業平均.x1_Methylhistidine.ToDouble() },
            new ChartData{ X= "Isoleucine", Y= 肌肉能量及耗損職業平均.Isoleucine.ToDouble() },
            new ChartData{ X= "Valine", Y= 肌肉能量及耗損職業平均.Valine.ToDouble() },
            new ChartData{ X= "BCAAs", Y= 肌肉能量及耗損職業平均.BCAAs.ToDouble() },
            new ChartData{ X= "3-Methylhistidine", Y= 肌肉能量及耗損職業平均.x3_Methylhistidine.ToDouble() },
            new ChartData{ X= "Leucine", Y= 肌肉能量及耗損職業平均.Leucine.ToDouble() },
            new ChartData{ X= "Histidine", Y= 肌肉能量及耗損職業平均.Histidine.ToDouble() },
        };
        #endregion

        #region 發炎狀態
        var 發炎狀態 = 代謝体分析.發炎狀態;
        var 發炎狀態校隊平均 = 代謝体分析.發炎狀態_校隊平均;
        var 發炎狀態職業平均 = 代謝体分析.發炎狀態_職業平均;
        ChartDatas21 = new List<ChartData>()
        {
            new ChartData{ X= "Kyn/Trp", Y= 發炎狀態.KynTrp.ToDouble() },
            new ChartData{ X= "Tryptophan", Y= 發炎狀態.Tryptophan.ToDouble() },
            new ChartData{ X= "Kynurenine", Y= 發炎狀態.Kynurenine.ToDouble() },
        };

        ChartDatas22 = new List<ChartData>()
        {
            new ChartData{ X= "Kyn/Trp", Y= 發炎狀態校隊平均.KynTrp.ToDouble() },
            new ChartData{ X= "Tryptophan", Y= 發炎狀態校隊平均.Tryptophan.ToDouble() },
            new ChartData{ X= "Kynurenine", Y= 發炎狀態校隊平均.Kynurenine.ToDouble() },
        };

        ChartDatas23 = new List<ChartData>()
        {
            new ChartData{ X= "Kyn/Trp", Y= 發炎狀態職業平均.KynTrp.ToDouble() },
            new ChartData{ X= "Tryptophan", Y= 發炎狀態職業平均.Tryptophan.ToDouble() },
            new ChartData{ X= "Kynurenine", Y= 發炎狀態職業平均.Kynurenine.ToDouble() },
        };
        #endregion

        #region 甲基化胺基酸
        var 甲基化胺基酸 = 代謝体分析.甲基化胺基酸;
        var 甲基化胺基酸校隊平均 = 代謝体分析.甲基化胺基酸_校隊平均;
        var 甲基化胺基酸職業平均 = 代謝体分析.甲基化胺基酸_職業平均;
        ChartDatas31 = new List<ChartData>()
        {
            new ChartData{ X= "TMAO", Y= 甲基化胺基酸.TMAO.ToDouble() },
            new ChartData{ X= "Serine", Y= 甲基化胺基酸.Serine.ToDouble() },
            new ChartData{ X= "Glycine", Y= 甲基化胺基酸.Glycine.ToDouble() },
            new ChartData{ X= "Sarcosine", Y= 甲基化胺基酸.Sarcosine.ToDouble() },
            new ChartData{ X= "Choline", Y= 甲基化胺基酸.Choline.ToDouble() },
        };

        ChartDatas32 = new List<ChartData>()
        {
            new ChartData{ X= "TMAO", Y= 甲基化胺基酸校隊平均.TMAO.ToDouble() },
            new ChartData{ X= "Serine", Y= 甲基化胺基酸校隊平均.Serine.ToDouble() },
            new ChartData{ X= "Glycine", Y= 甲基化胺基酸校隊平均.Glycine.ToDouble() },
            new ChartData{ X= "Sarcosine", Y= 甲基化胺基酸校隊平均.Sarcosine.ToDouble() },
            new ChartData{ X= "Choline", Y= 甲基化胺基酸校隊平均.Choline.ToDouble() },
        };

        ChartDatas33 = new List<ChartData>()
        {
            new ChartData{ X= "TMAO", Y= 甲基化胺基酸職業平均.TMAO.ToDouble() },
            new ChartData{ X= "Serine", Y= 甲基化胺基酸職業平均.Serine.ToDouble() },
            new ChartData{ X= "Glycine", Y= 甲基化胺基酸職業平均.Glycine.ToDouble() },
            new ChartData{ X= "Sarcosine", Y= 甲基化胺基酸職業平均.Sarcosine.ToDouble() },
            new ChartData{ X= "Choline", Y= 甲基化胺基酸職業平均.Choline.ToDouble() },
        };
        #endregion
    }
}
