@using Newtonsoft.Json
@layout EmptyLayout
@inject UploadFileService UploadFileService
@inject BrowseAthleteService BrowseAthleteService
@inject CurrentAthleteExamine CurrentAthleteExamine

<PageTitle>代謝物含量-壓力情緒指標</PageTitle>

<div class="container-custom">
    <div class="header">
        <h1>
            代謝物含量-壓力情緒指標
            @foreach (var item in CurrentAthleteExamine.ExamineList)
            {
                string selected = "";
                if (item == CurrentAthleteExamine.ExamineTime)
                {
                    selected = "btn-primary fw-bolder";
                }
                else
                {
                    selected = "btn-outline-primary";
                }
                <span class="mx-3 btn @selected"
                      @onclick="async () => await OnChangeExamineAsync(item)">@item</span>
            }
        </h1>
    </div>
    <div class="">
        <table>
            <thead>
                <tr>
                    <th class="title-width cell-label"></th>
                    <th class="title-data-width cell-label data-cell-title">運動前(基準值)</th>
                    <th class="title-data-width cell-label data-cell-title">運動後15分鐘</th>
                    <th class="title-data-width cell-label data-cell-title">運動後30分鐘</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="cell-label">血清素</td>
                    <td class="data-cell @data.血清素.運動前ClassText">@data.血清素.運動前</td>
                    <td class="data-cell @data.血清素.運動後15分ClassText">@data.血清素.運動後15分</td>
                    <td class="data-cell @data.血清素.運動後30分ClassText">@data.血清素.運動後30分</td>
                </tr>
                <tr>
                    <td class="cell-label">多巴胺</td>
                    <td class="data-cell @data.多巴胺.運動前ClassText">@data.多巴胺.運動前</td>
                    <td class="data-cell @data.多巴胺.運動後15分ClassText">@data.多巴胺.運動後15分</td>
                    <td class="data-cell @data.多巴胺.運動後30分ClassText">@data.多巴胺.運動後30分</td>
                </tr>
                <tr>
                    <td class="cell-label">5-HTP (血清素原料)</td>
                    <td class="data-cell @data.血清素原料.運動前ClassText">@data.血清素原料.運動前</td>
                    <td class="data-cell @data.血清素原料.運動後15分ClassText">@data.血清素原料.運動後15分</td>
                    <td class="data-cell @data.血清素原料.運動後30分ClassText">@data.血清素原料.運動後30分</td>
                </tr>
                <tr>
                    <td class="cell-label">N-乙醯血清素(抗憂鬱指標)</td>
                    <td class="data-cell @data.抗憂鬱指標.運動前ClassText">@data.抗憂鬱指標.運動前</td>
                    <td class="data-cell @data.抗憂鬱指標.運動後15分ClassText">@data.抗憂鬱指標.運動後15分</td>
                    <td class="data-cell @data.抗憂鬱指標.運動後30分ClassText">@data.抗憂鬱指標.運動後30分</td>
                </tr>
            </tbody>
        </table>
    </div>
    <br/>
    <div class="color-list-table">
        <table>
            <tbody>
                <tr>
                    <td class="color-cell cell-20-0">0~20</td>
                    <td class="color-cell cell-40-20">21~40</td>
                    <td class="color-cell cell-60-40">41~60</td>
                    <td class="color-cell cell-80-60">61~80</td>
                    <td class="color-cell cell-100-80">81~100</td>

@*                     <td class="color-cell cell-00-10">&gt; 0~10</td>
                    <td class="color-cell cell-10-20">&gt;10~20</td>
                    <td class="color-cell cell-20-30">&gt;20~30</td>
                    <td class="color-cell cell-30-40">&gt;30~40</td>
                    <td class="color-cell cell-40-50">&gt;40~50</td>
                    <td class="color-cell cell-50-60">&gt;50~60</td>
                    <td class="color-cell cell-60-70">&gt;60~70</td>
                    <td class="color-cell cell-70-80">&gt;70~80</td>
                    <td class="color-cell cell-80-90">&gt;80~90</td>
                    <td class="color-cell cell-90-100">&gt;90~100</td>
 *@                </tr>
            </tbody>
        </table>
    </div>

</div>

@code {
    [Parameter]
    public string Code { get; set; }

    NextGenerationSportsCTMSModel CTMSModel = new();
    public 代謝物含量壓力情緒指標Model data { get; set; } = new();

    Athlete Athlete = new();
    List<FileListNodeModel> fileList = new List<FileListNodeModel>();

    protected override async Task OnInitializedAsync()
    {
        Athlete = await BrowseAthleteService.GetByCodeAsync(Code, CurrentAthleteExamine);
        (CTMSModel, fileList) = await BrowseAthleteService
        .GetCurrentDataAsync(Athlete, CurrentAthleteExamine);

    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
        }
            data = CTMSModel.代謝物含量壓力情緒指標;
            StateHasChanged();
    }

    async Task OnChangeExamineAsync(string examineTime)
    {
        (CTMSModel, fileList) = await BrowseAthleteService
        .ChangeCurrentDataAsync(Athlete, CurrentAthleteExamine, examineTime);

        StateHasChanged();
    }
}