@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@inject NavigationManager NavigationManager
@inject PatientService PatientService
@inject DropDownListDataService DropDownListDataService

<div>

    <div class="card my-4">
        <div class="card-header">
            <h3>Visit code</h3>
        </div>
        <div class="card-body">
            <div class="">
                <div>
                    <span class="mx-3 mdi mdi-24px @data.VisitCodeIconA command-icon-width cursor-pointer"
                    @onclick="()=>OnVisitCodeChanged(MagicObjectHelper.VisitCodeA)"></span>
                    選日期
                </div>
                <div>
                    <span class="mx-3 mdi mdi-24px @data.VisitCodeIconB command-icon-width cursor-pointer"
                    @onclick="()=>OnVisitCodeChanged(MagicObjectHelper.VisitCodeB)"></span>
                    追蹤timeline
                </div>

                <div>
                    <span class="mx-3 mdi mdi-24px @data.VisitCodeIconC command-icon-width cursor-pointer"
                    @onclick="()=>OnVisitCodeChanged(MagicObjectHelper.VisitCodeC)"></span>
                    Cycle (Months)
                </div>
                <div>
                    <SfDropDownList TValue="int" TItem="int"
                    Placeholder="選擇一個值" DataSource="@ListCycleVisitCode"
                    @bind-Value="@data.CycleMonth">
                    </SfDropDownList>
                </div>
            </div>
        </div>
    </div>

    <div class="header" style="display: flex; align-items: center;">
        <h1 style="margin: 0; flex-grow: 1;">臨床資料 標靶副作用</h1>
        @* @if (editMode)
        {
            <div class="btn-group" role="group" aria-label="按鈕組">
                <button type="button" class="btn btn-primary save-button"
                @onclick=OnSave>
                    儲存
                </button>
                <button type="button" class="btn btn-danger cancel-button"
                @onclick=OnCancel>
                    取消
                </button>
            </div>
        }
        else
        {
            <span class="mx-3 mdi mdi-36px mdi-square-edit-outline command-icon-width cursor-pointer"
            @onclick=OnChangeEditMode></span>
        } *@
    </div>

    <div>
        <div class="d-flex align-items-center">
            <div>Visit code</div>
            @*             <div class="flex-grow-1 ms-2">
                @if (editMode)
                {
                    <SfTextBox @bind-Value="data.VisitCode" />
                }
                else
                {
                    @data.VisitCode
                }
            </div>
 *@        </div>

    </div>
</div>


<MessageBox Height="@MessageBox.Height" Width="@MessageBox.Width"
IsVisible="@MessageBox.IsVisible"
Title="@MessageBox.Title" Message="@MessageBox.Body"
Callback="MessageBox.MessageDelegate" />

<ConfirmBox Height="@ConfirmMessageBox.Height" Width="@ConfirmMessageBox.Width"
IsVisible="@ConfirmMessageBox.IsVisible"
Title="@ConfirmMessageBox.Title" Message="@ConfirmMessageBox.Body"
Callback="ConfirmMessageBox.ConfirmDelegate" />

<DialogBackground />

@code {
    [Parameter]
    public string Code { get; set; }

    ConfirmBoxModel ConfirmMessageBox { get; set; } = new ConfirmBoxModel();
    MessageBoxModel MessageBox { get; set; } = new MessageBoxModel();

    PatientData patientData = new();
    PatientAdapterModel patientAdapterModel = new();
    bool editMode = false;
    VisitCodeModel data = new();
    List<int> ListCycleVisitCode = new List<int>();

    protected override async Task OnInitializedAsync()
    {
        InitBuildSource();
    }

    void InitBuildSource()
    {
        ListCycleVisitCode = new List<int>();
        for (int i = 1; i <= 60; i++)
        {
            ListCycleVisitCode.Add(i);
        }
    }

    void OnChangeEditMode()
    {
        editMode = !editMode;
    }

    async Task OnSaveAsync()
    {
        patientAdapterModel.JsonData = patientData.ToJson();
        await PatientService.UpdateAsync(patientAdapterModel);
        editMode = false;

        MessageBox.Show("400px", "200px", "資訊", "儲存成功", MessageBox.HiddenAsync);
    }

    async Task OnCancel()
    {
        patientData.FromJson(patientAdapterModel.JsonData);
        editMode = false;
    }

    void OnVisitCodeChanged(string visitCode)
    {
        data.VisitCode = visitCode;
        data.UpdateIcon();
    }
}
