@inject NavigationManager NavigationManager
@inject AuthenticationStateHelper AuthenticationStateHelper


<!-- 底部導航按鈕 -->
<div class="navigation-buttons" style="padding:0 20px 20px 20px;">
    <div class="row g-2">
        <div class="col-2">
            <button class="btn btn-light btn-pink w-100" @onclick=On臨床資料>臨床資料</button>
        </div>
        <div class="col-2">
            <button class="btn btn-light btn-yellow w-100" @onclick=On抽血資料>抽血資料</button>
        </div>
        <div class="col-2">
            <button class="btn btn-light btn-green w-100" @onclick=On副作用>CTCAE 5.0</button>
        </div>
        <div class="col-2">
            <button class="btn btn-light btn-blue w-100" @onclick=On問卷>問卷</button>
        </div>
        <div class="col-2">
            <button class="btn btn-light btn-pink w-100" @onclick=On追蹤資料>追蹤資料</button>
        </div>
        <div class="col-2">
            <button class="btn btn-light btn-yellow w-100" @onclick=On風險評估>風險評估</button>
        </div>
    </div>
</div>

<MessageBox Height="@MessageBox.Height" Width="@MessageBox.Width"
            IsVisible="@MessageBox.IsVisible"
            Title="@MessageBox.Title" Message="@MessageBox.Body"
            Callback="MessageBox.MessageDelegate" />

<ConfirmBox Height="@ConfirmMessageBox.Height" Width="@ConfirmMessageBox.Width"
            IsVisible="@ConfirmMessageBox.IsVisible"
            Title="@ConfirmMessageBox.Title" Message="@ConfirmMessageBox.Body"
            Callback="ConfirmMessageBox.ConfirmDelegate" />


@code {
    [Parameter]
    public string Code { get; set; }

    ConfirmBoxModel ConfirmMessageBox { get; set; } = new ConfirmBoxModel();
    MessageBoxModel MessageBox { get; set; } = new MessageBoxModel();


    #region 頁籤切換
    void On臨床資料()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE臨床資訊, ConfirmMessageBox) == false)
            return;

        var url = $"/ClinicalInformation/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On抽血資料()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE抽血資料, ConfirmMessageBox) == false)
            return;

        var url = $"/BloodTest/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On副作用()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE副作用, ConfirmMessageBox) == false)
            return;

        var url = $"/SideEffectPage/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On問卷()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE問卷, ConfirmMessageBox) == false)
            return;

        var url = $"/Survey/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On追蹤資料()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE追蹤資料, ConfirmMessageBox) == false)
            return;

        var url = $"/TrackingData/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On風險評估()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE風險評估, ConfirmMessageBox) == false)
            return;

        var url = $"/RiskAssessment/{Code}";
        NavigationManager.NavigateTo(url);
    }
    #endregion

}