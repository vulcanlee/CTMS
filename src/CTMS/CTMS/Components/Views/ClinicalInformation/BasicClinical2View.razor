@using AutoMapper
@using CTMS.Business.Services.Dicoms
@using CTMS.DataModel.Models.AIAgent
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@inject NavigationManager NavigationManager
@inject PatientService PatientService
@inject DropDownListDataService DropDownListDataService
@inject Main臨床資料HelperService Main臨床資料HelperService
@inject BloodExameService BloodExameService
@inject AuthenticationStateHelper AuthenticationStateHelper
@inject RandomListService RandomListService
@inject AIIntegrateService AIIntegrateService
@inject IMapper mapper
@inject CancerStageService CancerStageService
@inject InputCsvService InputCsvService

<PageTitle>Basic clinical presentation 臨床資訊</PageTitle>

<div class="patient-info-page">
    <!-- 返回按鈕 - 修改為全寬背景 -->
    @* <div class="back-button-container">
        <a href="/" class="back-btn"><i class="bi bi-arrow-left"></i> 返回上頁</a>
    </div> *@

    <div class="px-4">
        <!-- 標題 -->
        <div class="title-section d-flex align-items-start">
            <div>
                <h1 class="mb-0">Basic clinical presentation 臨床資訊</h1>
                <div @onclick="async () => await OnRecomputeRandomListAsync()">
                    <SubjectNoView PatientAdapterModel="@patientAdapterModel" />
                </div>
            </div>
            @if (editMode)
            {
                <div class="btn-group mx-3 " role="group" aria-label="按鈕組">
                    <button type="button" class="btn btn-sm btn-primary save-button"
                            @onclick=OnSave>
                        儲存
                    </button>
                    <button type="button" class="btn btn-sm btn-danger cancle-button"
                            @onclick=OnCancel>
                        取消
                    </button>
                </div>
            }
            else
            {
                <div class="d-flex align-items-center">
                    <div>
                        <span class="edit-icon d-flex align-items-center cursor-pointer"
                              @onclick="OnChangeEditMode">
                            <i class="mx-3 mdi mdi-18px mdi-pencil-box-outline command-icon-width cursor-pointer"></i>編輯
                        </span>
                        <span class="edit-icon d-flex align-items-center cursor-pointer"
                              @onclick="OnShowVisitCode">
                            <i class="mx-3 mdi mdi-18px mdi-pencil-box-outline command-icon-width cursor-pointer"></i>Visit Code
                        </span>
                    </div>
                    <div class="mx-4">
                        <button class="btn btn-outline-primary"
                                @onclick=OnNotifyRadiologistAsync>
                            通知放射科醫師
                        </button>
                    </div>
                </div>
            }
        </div>

        <div class="row g-3">
            <!-- 第一個表格 - 病人基本資料 -->
            <div class="col-md-4">
                <div class="info-card patient-info">
                    <div class="">
                        <div class="header pink-header">
                            病人編號 Subject No
                            <span class="ms-2">
                                @patientData.臨床資訊.SubjectNo
                                @* @if (editMode)
                                {
                                    <SfTextBox @bind-Value="patientData.臨床資訊.SubjectNo" CssClass="w-100" />
                                }
                                else
                                {
                                    @patientData.臨床資訊.SubjectNo
                                } *@
                            </span><br />
                            <span class="small-info"><small>(E代表內膜癌, O代表卵巢癌)</small></span>
                        </div>
                    </div>


                    <table class="table table-bordered info-table">
                        <tbody>
                            <tr>
                                <td class="label-column">臨床資訊 癌別</td>
                                <td class="value-column">
                                    <div class="">
                                        @if (editMode)
                                        {
                                            <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                            Placeholder="選擇一個值" DataSource="@ListECOrOCC"
                                                            @bind-Value="@SelectECOrOCC" class="flex-grow-1">
                                                <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                                <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                    ValueChange="@OnECOrOCCChanged"></DropDownListEvents>
                                            </SfDropDownList>
                                        }
                                        else
                                        {
                                            @patientData.臨床資訊.ECorOC
                                        }
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">年齡 (Age)</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@List年齡Age"
                                                        @bind-Value="@Select年齡Age" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@On年齡AgeChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.Age
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">月經狀態</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@List月經狀態"
                                                        @bind-Value="@Select月經狀態" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@On月經狀態Changed"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.MenstrualStatus
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">身高 (Height) cm</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@List身高Height"
                                                        @bind-Value="@Select身高Height" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@On身高HeightChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.Height
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">體重 (BW) kg</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@List體重BW"
                                                        @bind-Value="@Select體重BW" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@On體重BWChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.Weight
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">BMI (kg / m²)</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        @patientData.臨床資訊.BMI
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.BMI
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">體表面積 (BSA) m²</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        @patientData.臨床資訊.BSA
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.BSA
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">腰圍 (AC) cm</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfTextBox @bind-Value="patientData.臨床資訊.AbdominalCircumference" CssClass="w-100" />
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.AbdominalCircumference
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">日常體能狀態 (PS)</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@List日常體能狀態PS"
                                                        @bind-Value="@Select日常體能狀態PS" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@On日常體能狀態PSChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.PerformanceStatus
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- 第二個表格 - 癌症狀態 -->
            <div class="col-md-4">
                <div class="info-card cancer-info">
                    <div class="header yellow-header">
                        癌症狀態 癌別 @patientData.臨床資訊.CancerType
                    </div>
                    <table class="table table-bordered info-table">
                        <tbody>
                            <tr>
                                <td class="label-column">癌症分期(2023 FIGO)</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListFIGO癌症分期"
                                                        @bind-Value="@SelectFIGO癌症分期" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnFIGO癌症分期Changed"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.FIGOStaging
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">AJCC c stage</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <div>T</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListAJCC_C_StageT"
                                                        @bind-Value="@SelectAJCC_C_StageT" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnAJCC_C_StageTChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                        <div>N</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListAJCC_C_StageN"
                                                        @bind-Value="@SelectAJCC_C_StageN" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnAJCC_C_StageNChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                        <div>M</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListAJCC_C_StageM"
                                                        @bind-Value="@SelectAJCC_C_StageM" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnAJCC_C_StageMChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    @patientData.臨床資訊.AJCCClinicalStage
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">AJCC p stage</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <div>T</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListAJCC_P_StageT"
                                                        @bind-Value="@SelectAJCC_P_StageT" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnAJCC_P_StageTChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                        <div>N</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListAJCC_P_StageN"
                                                        @bind-Value="@SelectAJCC_P_StageN" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnAJCC_P_StageNChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                        <div>M</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListAJCC_P_StageM"
                                                        @bind-Value="@SelectAJCC_P_StageM" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnAJCC_P_StageMChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    @patientData.臨床資訊.AJCCPathologicalStage
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">組織型態</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@List組織型態"
                                                        @bind-Value="@Select組織型態" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@On組織型態Changed"></DropDownListEvents>
                                        </SfDropDownList>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@List組織型態Detail"
                                                        PopupWidth="auto"
                                                        @bind-Value="@Select組織型態Detail" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@On組織型態DetailChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.HistologicalType

                                        <br />
                                        @patientData.臨床資訊.HistologicalTypeDetail
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">MMR protein</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <button class="btn btn-primary"
                                                @onclick=OnShowMMRProteinSetting>
                                            設定
                                        </button>
                                        <div>
                                            @patientData.臨床資訊.MMRProteinSetting.GetProteinResult()
                                        </div>
                                        @*                                         <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListMMRProtein"
                                                        @bind-Value="@SelectMMRProtein" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnMMRProteinChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListMMRProteinDetail"
                                                        @bind-Value="@SelectMMRProteinDetail" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnMMRProteinDetailChanged"></DropDownListEvents>
                                        </SfDropDownList> *@   
                                        }
                                    else
                                    {
                                        <div>
                                            @patientData.臨床資訊.MMRProteinSetting.GetProteinResult()
                                        </div>
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">p53</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListP53"
                                                        @bind-Value="@SelectP53" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnP53Changed"></DropDownListEvents>
                                        </SfDropDownList>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.P53
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td class="label-column">Hormon status</td>
                                <td class="value-column">
                                    @if (editMode)
                                    {
                                        <div>ER</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListHormonStatusER"
                                                        @bind-Value="@SelectHormonStatusER" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnHormonStatusERChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                        <div class="d-flex align-items-center">
                                            <SfTextBox @bind-Value="patientData.臨床資訊.HormonStatusERPercent" CssClass="me-2" />
                                            <span>%</span>
                                        </div>
                                        <div class="mt-2">PR</div>
                                        <SfDropDownList TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                                        Placeholder="選擇一個值" DataSource="@ListHormonStatusPR"
                                                        @bind-Value="@SelectHormonStatusPR" class="flex-grow-1">
                                            <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                                            <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                                                ValueChange="@OnHormonStatusPRChanged"></DropDownListEvents>
                                        </SfDropDownList>
                                        <div class="d-flex align-items-center">
                                            <SfTextBox @bind-Value="patientData.臨床資訊.HormonStatusPRPercent" CssClass="me-2" />
                                            <span>%</span>
                                        </div>
                                    }
                                    else
                                    {
                                        @patientData.臨床資訊.GetErPrStatus()
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- 第三和第四個區塊 - CT Image 與 Report -->
            <div class="col-md-4">
                <div class="info-card image-card">
                    <div class="header green-header">
                        CT Image
                    </div>
                    <div class="empty-image-area">
                        <img src="@($"{image}?v={imageVersion}")" class="responsive-image" />
                    </div>
                </div>
                <div class="info-card report-card mt-3">
                    <div class="header blue-header cursor-pointer" @onclick=OnUploadBtn>
                        上傳
                    </div>
                    <div class="header blue-header cursor-pointer mt-1" @onclick=OnPushToAIBtn>
                        AI
                    </div>
                    <div class="header blue-header cursor-pointer mt-1" @onclick=OnConfirmAIBtn>
                        AI處理確認
                    </div>
                </div>
            </div>
        </div>

        <!-- 底部導航按鈕 -->
        <div class="navigation-buttons">
            <div class="row g-2">
                <div class="col-2">
                    <button class="btn btn-light btn-pink w-100" @onclick=On臨床資料>臨床資料</button>
                </div>
                <div class="col-2">
                    <button class="btn btn-light btn-yellow w-100" @onclick=On抽血資料>抽血資料</button>
                </div>
                <div class="col-2">
                    <button class="btn btn-light btn-green w-100" @onclick=On副作用>CTCAE 5.0</button>
                </div>
                <div class="col-2">
                    <button class="btn btn-light btn-blue w-100" @onclick=On問卷>問卷</button>
                </div>
                <div class="col-2">
                    <button class="btn btn-light btn-pink w-100" @onclick=On追蹤資料>追蹤資料</button>
                </div>
                <div class="col-2">
                    <button class="btn btn-light btn-yellow w-100" @onclick=On風險評估>風險評估</button>
                </div>
            </div>
        </div>
    </div>
</div>

<MMRProteinSettingDialog OpenPicker=ShowMMRProteinSettingDialog
                         data=patientData.臨床資訊.MMRProteinSetting
                         OnConfirmCallback=OnMMRProteinSettingAsync />

<VisitCodeDialog OpenPicker=ShowVisitCodeDialog
                 Code="@Code"
                 data=VisitCodeSetModel
                 OnConfirmCallback=OnVisitCodeAsync />

<UploadDicomDialog OpenPicker=ShowUploadDicomDialog
                   SubjectNo="@SubjectNo"
                   OnConfirmCallback=OnUploadDicomAsync />

<MessageBox Height="@MessageBox.Height" Width="@MessageBox.Width"
            IsVisible="@MessageBox.IsVisible"
            Title="@MessageBox.Title" Message="@MessageBox.Body"
            Callback="MessageBox.MessageDelegate" />

<ConfirmBox Height="@ConfirmMessageBox.Height" Width="@ConfirmMessageBox.Width"
            IsVisible="@ConfirmMessageBox.IsVisible"
            Title="@ConfirmMessageBox.Title" Message="@ConfirmMessageBox.Body"
            Callback="ConfirmMessageBox.ConfirmDelegate" />

<DialogBackground />

@code {

    [Parameter]
    public string Code { get; set; }

    PatientData patientData = new();
    PatientData beforePatientData = new();
    PatientAdapterModel patientAdapterModel = new();
    bool editMode = false;

    bool ShowMMRProteinSettingDialog = false;
    bool ShowVisitCodeDialog = false;
    bool ShowUploadDicomDialog = false;

    ConfirmBoxModel ConfirmMessageBox { get; set; } = new ConfirmBoxModel();
    MessageBoxModel MessageBox { get; set; } = new MessageBoxModel();

    VisitCodeSetModel VisitCodeSetModel = new();

    string SubjectNo = "";
    string image = "";
    string imageVersion = DateTime.Now.Ticks.ToString();

    protected override async Task OnInitializedAsync()
    {
        #region Demo 使用
        // if (patientData.臨床資訊.SubjectNo == "NCKUH-E001")
        // {
        //     patientData.臨床資訊.Image = "ExperimentalGroup";
        // }
        // else if (patientData.臨床資訊.SubjectNo == "NCKUH-C001")
        // {
        //     patientData.臨床資訊.Image = "ControlGroup";
        // }
        #endregion
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetData();
            StateHasChanged();
        }
    }

    async Task GetData()
    {
        CancerStageService.ReadAll();
        patientAdapterModel = await PatientService.GetAsync(Code);
        patientData.FromJson(patientAdapterModel.JsonData);
        patientData.臨床資訊.CalculateCancerType();
        DropDownListDataInit();
        patientData.臨床資訊.BuildStage();

        SubjectNo = patientData.臨床資訊.SubjectNo;
        image = Path.Combine(MagicObjectHelper.UploadFinalPath, patientData.臨床資訊.ImagePng);
    }

    #region 拉霸選單物件宣告
    List<DropDownListDataModel> ListECOrOCC = new List<DropDownListDataModel>();
    DropDownListDataModel SelectECOrOCC = new DropDownListDataModel();
    List<DropDownListDataModel> List年齡Age = new List<DropDownListDataModel>();
    DropDownListDataModel Select年齡Age = new DropDownListDataModel();
    List<DropDownListDataModel> List月經狀態 = new List<DropDownListDataModel>();
    DropDownListDataModel Select月經狀態 = new DropDownListDataModel();
    List<DropDownListDataModel> List身高Height = new List<DropDownListDataModel>();
    DropDownListDataModel Select身高Height = new DropDownListDataModel();
    List<DropDownListDataModel> List體重BW = new List<DropDownListDataModel>();
    DropDownListDataModel Select體重BW = new DropDownListDataModel();
    List<DropDownListDataModel> List日常體能狀態PS = new List<DropDownListDataModel>();
    DropDownListDataModel Select日常體能狀態PS = new DropDownListDataModel();
    List<DropDownListDataModel> ListFIGO癌症分期 = new List<DropDownListDataModel>();
    DropDownListDataModel SelectFIGO癌症分期 = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_C_Stage = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_C_Stage = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_C_StageT = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_C_StageT = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_C_StageN = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_C_StageN = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_C_StageM = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_C_StageM = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_P_Stage = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_P_Stage = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_P_StageT = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_P_StageT = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_P_StageN = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_P_StageN = new DropDownListDataModel();
    List<DropDownListDataModel> ListAJCC_P_StageM = new List<DropDownListDataModel>();
    DropDownListDataModel SelectAJCC_P_StageM = new DropDownListDataModel();
    List<DropDownListDataModel> ListMMRProtein = new List<DropDownListDataModel>();
    DropDownListDataModel SelectMMRProtein = new DropDownListDataModel();
    List<DropDownListDataModel> ListMMRProteinDetail = new List<DropDownListDataModel>();
    DropDownListDataModel SelectMMRProteinDetail = new DropDownListDataModel();
    List<DropDownListDataModel> ListP53 = new List<DropDownListDataModel>();
    DropDownListDataModel SelectP53 = new DropDownListDataModel();
    List<DropDownListDataModel> ListHormonStatus = new List<DropDownListDataModel>();
    DropDownListDataModel SelectHormonStatus = new DropDownListDataModel();
    List<DropDownListDataModel> ListHormonStatusER = new List<DropDownListDataModel>();
    DropDownListDataModel SelectHormonStatusER = new DropDownListDataModel();
    List<DropDownListDataModel> ListHormonStatusPR = new List<DropDownListDataModel>();
    DropDownListDataModel SelectHormonStatusPR = new DropDownListDataModel();
    List<DropDownListDataModel> List組織型態 = new List<DropDownListDataModel>();
    DropDownListDataModel Select組織型態 = new DropDownListDataModel();
    List<DropDownListDataModel> List組織型態Detail = new List<DropDownListDataModel>();
    DropDownListDataModel Select組織型態Detail = new DropDownListDataModel();
    #endregion

    void DropDownListDataInit()
    {
        #region 癌別
        {
            ListECOrOCC = DropDownListDataService.Get癌別Code();
            var item = ListECOrOCC.FirstOrDefault(x => x.Key == patientData.臨床資訊.ECorOC);
            if (item != null)
                SelectECOrOCC = item;
        }
        #endregion

        #region 年齡Age
        {
            List年齡Age = DropDownListDataService.GetAge();
            var item = List年齡Age.FirstOrDefault(x => x.Key == patientData.臨床資訊.Age);
            if (item != null)
                Select年齡Age = item;
        }
        #endregion

        #region 月經狀態
        {
            List月經狀態 = DropDownListDataService.Get月經狀態();
            var item = List月經狀態.FirstOrDefault(x => x.Key == patientData.臨床資訊.MenstrualStatus);
            if (item != null)
                Select月經狀態 = item;
        }
        #endregion

        #region 身高Height
        {
            List身高Height = DropDownListDataService.Get身高Height();
            var item = List身高Height.FirstOrDefault(x => x.Key == patientData.臨床資訊.Height);
            if (item != null)
                Select身高Height = item;
        }
        #endregion

        #region 體重BW
        {
            List體重BW = DropDownListDataService.Get體重BW();
            var item = List體重BW.FirstOrDefault(x => x.Key == patientData.臨床資訊.Weight);
            if (item != null)
                Select體重BW = item;
        }
        #endregion

        #region 日常體能狀態PS
        {
            List日常體能狀態PS = DropDownListDataService.Get日常體能狀態PS();
            var item = List日常體能狀態PS.FirstOrDefault(x => x.Key == patientData.臨床資訊.PerformanceStatus);
            if (item != null)
                Select日常體能狀態PS = item;
        }
        #endregion

        #region FIGO癌症分期
        {
            RefreshFIGO癌症分期();
        }
        #endregion

        #region FIGOListAJCC_C_Stage
        {
            ListAJCC_C_Stage = DropDownListDataService.GetAJCC_CP_Stage();
            var item = ListAJCC_C_Stage.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCClinicalStage);
            if (item != null)
                SelectAJCC_C_Stage = item;
        }
        #endregion

        #region FIGOListAJCC_C_StageT
        {
            ListAJCC_C_StageT = DropDownListDataService.GetAJCC_CP_StageT();
            var item = ListAJCC_C_StageT.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCClinicalStageT);
            if (item != null)
                SelectAJCC_C_StageT = item;
        }
        #endregion

        #region FIGOListAJCC_C_StageN
        {
            ListAJCC_C_StageN = DropDownListDataService.GetAJCC_CP_StageN();
            var item = ListAJCC_C_StageN.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCClinicalStageN);
            if (item != null)
                SelectAJCC_C_StageN = item;
        }
        #endregion

        #region FIGOListAJCC_C_StageM
        {
            ListAJCC_C_StageM = DropDownListDataService.GetAJCC_CP_StageM();
            var item = ListAJCC_C_StageM.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCClinicalStageM);
            if (item != null)
                SelectAJCC_C_StageM = item;
        }
        #endregion

        #region FIGOListAJCC_C_Stage
        {
            ListAJCC_P_Stage = DropDownListDataService.GetAJCC_CP_Stage();
            var item = ListAJCC_P_Stage.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCPathologicalStage);
            if (item != null)
                SelectAJCC_P_Stage = item;
        }
        #endregion

        #region FIGOListAJCC_C_StageT
        {
            ListAJCC_P_StageT = DropDownListDataService.GetAJCC_CP_StageT();
            var item = ListAJCC_P_StageT.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCPathologicalStageT);
            if (item != null)
                SelectAJCC_P_StageT = item;
        }
        #endregion

        #region FIGOListAJCC_C_StageN
        {
            ListAJCC_P_StageN = DropDownListDataService.GetAJCC_CP_StageN();
            var item = ListAJCC_P_StageN.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCPathologicalStageN);
            if (item != null)
                SelectAJCC_P_StageN = item;
        }
        #endregion

        #region FIGOListAJCC_C_StageM
        {
            ListAJCC_P_StageM = DropDownListDataService.GetAJCC_CP_StageM();
            var item = ListAJCC_P_StageM.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.AJCCPathologicalStageM);
            if (item != null)
                SelectAJCC_P_StageM = item;
        }
        #endregion

        #region MMRProtein
        {
            ListMMRProtein = DropDownListDataService.GetMMRProtein();
            var item = ListMMRProtein.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.MMRProtein);
            if (item != null)
            {
                SelectMMRProtein = item;
                RefreshMMRProteinDetail();
            }
        }
        #endregion

        #region P53
        {
            ListP53 = DropDownListDataService.GetP53();
            var item = ListP53.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.P53);
            if (item != null)
                SelectP53 = item;
        }
        #endregion

        #region HormonStatus
        {
            ListHormonStatusER = DropDownListDataService.GetHormonStatusER();
            var item = ListHormonStatusER.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.HormonStatusER);
            if (item != null)
                SelectHormonStatusER = item;
            ListHormonStatusPR = DropDownListDataService.GetHormonStatusPR();
            var itemPR = ListHormonStatusPR.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.HormonStatusPR);
            if (itemPR != null)
                SelectHormonStatusPR = itemPR;
        }
        #endregion

        #region 組織型態
        {
            List組織型態Detail?.Clear();
            List組織型態 = DropDownListDataService.Get組織型態();
            var item = List組織型態.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.HistologicalType);
            if (item != null)
            {
                Select組織型態 = item;

                Refresh組織型態Detail();
            }
        }
        #endregion
    }

    #region 下拉選單的事件

    void RefreshFIGO癌症分期()
    {
        if (patientData.臨床資訊.ECorOC == "EC")
        {
            ListFIGO癌症分期 = DropDownListDataService.GetFIGO癌症分期子宮內膜癌EndometrialCancer();
            var item = ListFIGO癌症分期.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.FIGOStaging);
            if (item != null)
                SelectFIGO癌症分期 = item;
        }
        else if (patientData.臨床資訊.ECorOC == "OC")
        {
            ListFIGO癌症分期 = DropDownListDataService.GetFIGO癌症分期卵巢癌OvarianCancer();
            var item = ListFIGO癌症分期.FirstOrDefault(x =>
                x.Key == patientData.臨床資訊.FIGOStaging);
            if (item != null)
                SelectFIGO癌症分期 = item;
        }
    }

    void Refresh組織型態Detail()
    {
        if (Select組織型態 == null) return;
        List組織型態Detail = DropDownListDataService.Get組織型態Detail(Select組織型態.Key);
        var itemDetail = List組織型態Detail.FirstOrDefault(x =>
            x.Key == patientData.臨床資訊.HistologicalTypeDetail);
        if (itemDetail != null)
        {
            Select組織型態Detail = itemDetail;
        }
    }

    void RefreshMMRProteinDetail()
    {
        // if (SelectMMRProtein == null) return;
        ListMMRProteinDetail = DropDownListDataService.GetMMRProteinDetail();
        var itemDetail = ListMMRProteinDetail.FirstOrDefault(x =>
            x.Key == patientData.臨床資訊.MMRProteinDetail);
        if (itemDetail != null)
        {
            SelectMMRProteinDetail = itemDetail;
        }
    }

    private async Task OnFIGO癌症分期Changed(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.FIGOStaging = args.Value.Key;
    }

    private async Task On組織型態Changed(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.HistologicalType = args.Value.Key;
        Refresh組織型態Detail();
    }

    private async Task On組織型態DetailChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.HistologicalTypeDetail = args.Value.Key;
    }

    private async Task OnHormonStatusChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.HormonStatus = args.Value.Key;
    }

    private async Task OnHormonStatusERChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.HormonStatusER = args.Value.Key;
    }

    private async Task OnHormonStatusPRChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.HormonStatusPR = args.Value.Key;
    }

    private async Task OnP53Changed(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.P53 = args.Value.Key;
    }

    private async Task OnMMRProteinChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.MMRProtein = args.Value.Key;
        RefreshMMRProteinDetail();
    }

    private async Task OnMMRProteinDetailChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.MMRProteinDetail = args.Value.Key;
    }

    private async Task OnAJCC_P_StageChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCPathologicalStage = args.Value.Key;
    }

    private async Task OnAJCC_P_StageTChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCPathologicalStageT = args.Value.Key;
        patientData.臨床資訊.BuildStage();
        patientData.臨床資訊.AJCCPathologicalStage = CancerStageService
    .GetStageNames(patientData.臨床資訊.ECorOC, MagicObjectHelper.StageP,
        patientData.臨床資訊.AJCCPathologicalStageT,
        patientData.臨床資訊.AJCCPathologicalStageN,
        patientData.臨床資訊.AJCCPathologicalStageM);
    }

    private async Task OnAJCC_P_StageNChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCPathologicalStageN = args.Value.Key;
        patientData.臨床資訊.BuildStage();
        patientData.臨床資訊.AJCCPathologicalStage = CancerStageService
        .GetStageNames(patientData.臨床資訊.ECorOC, MagicObjectHelper.StageP,
            patientData.臨床資訊.AJCCPathologicalStageT,
            patientData.臨床資訊.AJCCPathologicalStageN,
            patientData.臨床資訊.AJCCPathologicalStageM);
    }

    private async Task OnAJCC_P_StageMChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCPathologicalStageM = args.Value.Key;
        patientData.臨床資訊.BuildStage();
        patientData.臨床資訊.AJCCPathologicalStage = CancerStageService
    .GetStageNames(patientData.臨床資訊.ECorOC, MagicObjectHelper.StageP,
        patientData.臨床資訊.AJCCPathologicalStageT,
        patientData.臨床資訊.AJCCPathologicalStageN,
        patientData.臨床資訊.AJCCPathologicalStageM);
    }

    private async Task OnAJCC_C_StageChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCClinicalStage = args.Value.Key;
    }

    private async Task OnAJCC_C_StageTChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCClinicalStageT = args.Value.Key;
        patientData.臨床資訊.BuildStage();
        patientData.臨床資訊.AJCCClinicalStage =
        CancerStageService.GetStageNames(patientData.臨床資訊.ECorOC, MagicObjectHelper.StageC,
            patientData.臨床資訊.AJCCClinicalStageT,
            patientData.臨床資訊.AJCCClinicalStageN,
            patientData.臨床資訊.AJCCClinicalStageM);
    }

    private async Task OnAJCC_C_StageNChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCClinicalStageN = args.Value.Key;
        patientData.臨床資訊.BuildStage();
        patientData.臨床資訊.AJCCClinicalStage =
    CancerStageService.GetStageNames(patientData.臨床資訊.ECorOC, MagicObjectHelper.StageC,
        patientData.臨床資訊.AJCCClinicalStageT,
        patientData.臨床資訊.AJCCClinicalStageN,
        patientData.臨床資訊.AJCCClinicalStageM);
    }

    private async Task OnAJCC_C_StageMChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.AJCCClinicalStageM = args.Value.Key;
        patientData.臨床資訊.BuildStage();
        patientData.臨床資訊.AJCCClinicalStage =
    CancerStageService.GetStageNames(patientData.臨床資訊.ECorOC, MagicObjectHelper.StageC,
        patientData.臨床資訊.AJCCClinicalStageT,
        patientData.臨床資訊.AJCCClinicalStageN,
        patientData.臨床資訊.AJCCClinicalStageM);
    }

    private async Task On日常體能狀態PSChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.PerformanceStatus = args.Value.Key;
    }

    private async Task On體重BWChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.Weight = args.Value.Key;
        patientData.臨床資訊.CalculateBMIAndBSA();
    }

    private async Task On身高HeightChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.Height = args.Value.Key;
        patientData.臨床資訊.CalculateBMIAndBSA();
    }

    private async Task On月經狀態Changed(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.MenstrualStatus = args.Value.Key;
    }

    private async Task On年齡AgeChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.Age = args.Value.Key;
    }

    private async Task OnECOrOCCChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value == null) return;
        patientData.臨床資訊.ECorOC = args.Value.Key;
        patientData.臨床資訊.CalculateCancerType();
        RefreshFIGO癌症分期();
    }

    #endregion

    void OnUploadBtn()
    {
        if (AuthenticationStateHelper.CheckAccessPage(MagicObjectHelper.ROLEAI操作) == true)
        {
            ShowUploadDicomDialog = true;
        }
    }

    async Task OnPushToAIBtn()
    {
        if (AuthenticationStateHelper.CheckAccessPage(MagicObjectHelper.ROLEAI操作) == false)
        {
            return;
        }
        Patient patient = mapper.Map<Patient>(patientAdapterModel);

        await GetData();
        var currentRootPath = Directory.GetCurrentDirectory();
        var dicomImage = Path.Combine(currentRootPath, MagicObjectHelper.UploadFinalPath, patientData.臨床資訊.ImageDicom);

        string preCheckMessage = await AIIntegrateService.PushToAICheck(patient, patientData, dicomImage);
        if (string.IsNullOrEmpty(preCheckMessage) == false)
        {
            MessageBox.Show("400px", "200px", "錯誤", preCheckMessage, MessageBox.HiddenAsync);
            return;
        }

        PatientAIInfo patientAIInfo = await AIIntegrateService.PushToAI(patient, patientData, dicomImage);

        patientData.臨床資訊.SignatureDate = string.Empty;
        patientData.臨床資訊.SignatureId = 0;
        patientData.臨床資訊.SignatureName = string.Empty;
        patientData.臨床資訊.KeyName = patientAIInfo.KeyName;
        patientAdapterModel.JsonData = patientData.ToJson();
        patientAdapterModel.AI處理 = MagicObjectHelper.AI處理處理中;
        patientAdapterModel.AI評估 = MagicObjectHelper.NA;
        // patientAdapterModel.組別 = "Dr";
        await PatientService.UpdateAsync(patientAdapterModel);

        MessageBox.Show("400px", "200px", "資訊", $"已經將此紀錄送至 AI 推論中 (ID: {patientAIInfo.KeyName})", MessageBox.HiddenAsync);

    }

    async Task OnConfirmAIBtn()
    {
        if (AuthenticationStateHelper.CheckAccessPage(MagicObjectHelper.ROLEAI操作) == false)
        {
            return;
        }
        Patient patient = mapper.Map<Patient>(patientAdapterModel);

        await GetData();
        bool isCompletion = await AIIntegrateService.CheckAIProcess(patientData.臨床資訊.KeyName);

        string msg = "";
        if (isCompletion == false)
        {
            msg = "AI處理  尚未  完成，請稍後再確認";
        }
        else
        {
            msg = "AI處理  已經  完成，可以在 風險評估 頁籤看到推論結果";

            InputCsvModel inputCsvModel = await AIIntegrateService.GetInputCsv(patientData.臨床資訊.KeyName);

            string imageRootPath = MagicObjectHelper.UploadFinalPath;
            var keyName = patientData.臨床資訊.KeyName;
            // http://localhost:5272/UploadFiles/202509111436154559/Phase1Result/202509111436154559.png
            var imageFilename = $"{keyName}/Phase1Result/{keyName}.png";
            patientData.臨床資訊.RiskAssessmentResult.ImagePng = imageFilename;
            patientData.臨床資訊.RiskAssessmentResult.SMD骨骼肌密度 = inputCsvModel.Total_SMD.ToFloat().ToString("F2");
            patientData.臨床資訊.RiskAssessmentResult.IMAT肌間肌肉脂肪組織 = inputCsvModel.Total_ImatA.ToFloat().ToString("F2");
            patientData.臨床資訊.RiskAssessmentResult.LAMA低密度肌肉區域 = inputCsvModel.Total_LamaA.ToFloat().ToString("F2");
            patientData.臨床資訊.RiskAssessmentResult.NAMA正常密度肌肉區域 = inputCsvModel.Total_NamaA.ToFloat().ToString("F2");
            //SMI= LAMA+NAMA/(身高的平方(公尺))
            patientData.臨床資訊.RiskAssessmentResult.SMI骨骼肌指標 = ((inputCsvModel.Total_LamaA.ToFloat() + inputCsvModel.Total_NamaA.ToFloat())
                / (patientData.臨床資訊.Height.ToFloat() / 100.0 * patientData.臨床資訊.Height.ToFloat() / 100.0)).ToString("F2");

            patientData.臨床資訊.RiskAssessmentResult.Myosteatosis肌肉脂肪變性 = (inputCsvModel.Total_ImatA.ToFloat() + inputCsvModel.Total_LamaA.ToFloat()).ToString("F2");

            (string risk, string reducedRisk) = await AIIntegrateService.GetOnputCsv(patientData.臨床資訊.KeyName);

            patientData.臨床資訊.RiskAssessmentResult.風險程度 = risk;
            patientData.臨床資訊.RiskAssessmentResult.是否需要降15Percent劑量 = reducedRisk;

            if (patientAdapterModel.組別 == "AI")
            {
                patientData.臨床資訊.RiskAssessmentResult.ExperimentalControl = MagicObjectHelper.實驗組;
            }
            else
            {
                patientData.臨床資訊.RiskAssessmentResult.ExperimentalControl = MagicObjectHelper.對照組;
            }

            patientAdapterModel.JsonData = patientData.ToJson();

            patientAdapterModel.AI處理 = MagicObjectHelper.AI處理已完成;
            // patientAdapterModel.組別 = "AI";
            await PatientService.UpdateAsync(patientAdapterModel);
        }
        MessageBox.Show("400px", "200px", "資訊", msg, MessageBox.HiddenAsync);
    }

    void OnShowMMRProteinSetting()
    {
        ShowMMRProteinSettingDialog = true;
    }

    void OnShowVisitCode()
    {
        patientData.臨床資料.CollectVisitCode(VisitCodeSetModel);

        ShowVisitCodeDialog = true;
    }

    async Task OnMMRProteinSettingAsync(MMRProteinSetting mMRProteinSetting)
    {
        if (mMRProteinSetting != null)
        {
            patientData.臨床資訊.MMRProteinSetting = mMRProteinSetting;
        }
        ShowMMRProteinSettingDialog = false;
    }

    async Task OnVisitCodeAsync(VisitCodeSetModel visitCodeSetModel)
    {
        await GetData();
        if (visitCodeSetModel != null)
        {
            Main臨床資料HelperService.SyncData(patientData.臨床資訊.SubjectNo, patientData.臨床資料, visitCodeSetModel);
            patientData.SyncData();
            patientAdapterModel.JsonData = patientData.ToJson();
            await PatientService.UpdateAsync(patientAdapterModel);
        }
        ShowVisitCodeDialog = false;
    }

    async Task OnUploadDicomAsync(string filename)
    {
        if (filename != null)
        {
            patientData.臨床資訊.Image = patientData.臨床資訊.SubjectNo;
            patientAdapterModel.JsonData = patientData.ToJson();
            await PatientService.UpdateAsync(patientAdapterModel);
            imageVersion = DateTime.Now.Ticks.ToString();
            StateHasChanged();
            await Task.Delay(200);
        }
        imageVersion = DateTime.Now.Ticks.ToString();
        ShowUploadDicomDialog = false;
        await GetData();
        StateHasChanged();
    }

    void OnChangeEditMode()
    {
        editMode = !editMode;
        var beforeJson = patientData.ToJson();
        PatientData temp = new PatientData();
        temp.FromJson(beforeJson);
        beforePatientData = temp;
    }

    async Task OnSave()
    {
        RandomParameterMode randomParameterModeAfter = new RandomParameterMode()
        {
            SubjectNo = patientData.臨床資訊.SubjectNo,
            FIGO = patientData.臨床資訊.FIGOStaging,
            ECorOC = patientData.臨床資訊.ECorOC,
        };
        randomParameterModeAfter.Parse();
        RandomParameterMode randomParameterModeBefore = new RandomParameterMode()
        {
            SubjectNo = beforePatientData.臨床資訊.SubjectNo,
            FIGO = beforePatientData.臨床資訊.FIGOStaging,
            ECorOC = beforePatientData.臨床資訊.ECorOC,
        };
        randomParameterModeBefore.Parse();
        var Treatment = await RandomListService.AssignRandomToStudyCodeAsync(
            randomParameterModeBefore, randomParameterModeAfter);

        patientAdapterModel.組別 = Treatment;
        patientAdapterModel.JsonData = patientData.ToJson();
        await PatientService.UpdateAsync(patientAdapterModel);
        editMode = false;

        // var needNotification = await ConfirmSendNotificationAsync();
        // await Task.Delay(100);
        // StateHasChanged();
    }

    async Task OnRecomputeRandomListAsync()
    {
        bool result = false;
        var task = ConfirmMessageBox.ShowAsync("400px", "200px",
             "再次確認", $"確定要重新計算亂數表中的組別嗎？",
             ConfirmMessageBox.HiddenAsync);
        result = await task;
        if (result == false)
        {
            return;
        }

        RandomParameterMode randomParameterMode = new RandomParameterMode()
        {
            SubjectNo = patientData.臨床資訊.SubjectNo,
            FIGO = patientData.臨床資訊.FIGOStaging,
            ECorOC = patientData.臨床資訊.ECorOC,

        };
        randomParameterMode.Parse();

        var Treatment = await RandomListService.ReComputeRandomListAsync(randomParameterMode);

        patientAdapterModel.組別 = Treatment;
        patientAdapterModel.JsonData = patientData.ToJson();
        await PatientService.UpdateAsync(patientAdapterModel);
    }

    async Task OnCancel()
    {
        patientData.FromJson(patientAdapterModel.JsonData);
        editMode = false;
    }

    async Task OnNotifyRadiologistAsync()
    {
        var needNotification = await ConfirmSendNotificationAsync();
    }

    async Task<bool> ConfirmSendNotificationAsync()
    {
        bool result = false;
        var task = ConfirmMessageBox.ShowAsync("400px", "200px",
             "再次確認", $"確定要寄送通知給放射科醫師嗎？",
             ConfirmMessageBox.HiddenAsync);
        await Task.Delay(100);
        StateHasChanged();
        result = await task;
        return result;
    }

    (string title, string body) BuildNotificationMessage()
    {
        string title = "請協助進行影像判讀與上傳最新影像";

        string body = $"請放射科醫師協助 {patientData.臨床資訊.SubjectNo} 進行影像判讀，謝謝您！";
        return (title, body);
    }
    #region 頁籤切換
    void On臨床資料()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE臨床資訊, ConfirmMessageBox) == false)
            return;

        var url = $"/ClinicalInformation/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On抽血資料()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE抽血資料, ConfirmMessageBox) == false)
            return;

        var url = $"/BloodTest/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On副作用()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE副作用, ConfirmMessageBox) == false)
            return;

        var url = $"/SideEffectPage/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On問卷()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE問卷, ConfirmMessageBox) == false)
            return;

        var url = $"/Survey/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On追蹤資料()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE追蹤資料, ConfirmMessageBox) == false)
            return;

        var url = $"/TrackingData/{Code}";
        NavigationManager.NavigateTo(url);
    }

    void On風險評估()
    {
        if (AuthenticationStateHelper.CheckShowPage(MagicObjectHelper.ROLE風險評估, ConfirmMessageBox) == false)
            return;

        var url = $"/RiskAssessment/{Code}";
        NavigationManager.NavigateTo(url);
    }
    #endregion


}
