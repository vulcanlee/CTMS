@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@inject NavigationManager NavigationManager
@inject PatientService PatientService
@inject DropDownListDataService DropDownListDataService

<PageTitle>臨床資料 化學治療</PageTitle>

<div>

    <div class="header" style="display: flex; align-items: center;">
        <h1 style="margin: 0; flex-grow: 1;">臨床資料 化學治療</h1>
        @if (editMode)
        {
            <div class="btn-group" role="group" aria-label="按鈕組">
                <button type="button" class="btn btn-primary save-button"
                        @onclick=OnSave>
                    儲存
                </button>
                <button type="button" class="btn btn-danger cancel-button"
                        @onclick=OnCancel>
                    取消
                </button>
            </div>
        }
        else
        {
            <span class="mx-3 mdi mdi-36px mdi-square-edit-outline command-icon-width cursor-pointer"
                  @onclick=OnChangeEditMode></span>
        }
    </div>

    <div>
        <div>
            <div>
                <span>Visit code : </span>
                <span>
                    <button class="btn btn-primary mx-2"
                            @onclick=OnAddVisiteCode>
                        新增
                    </button>
                </span>
                <span>
                    <button class="btn btn-success mx-2"
                            @onclick=OnEditVisiteCode>
                        修改
                    </button>
                </span>
                <span>
                    <button class="btn btn-danger mx-2"
                            @onclick=OnVisiteCodeDeleteAsync>
                        刪除
                    </button>
                </span>
            </div>
        </div>
        <div class="d-flex align-items-center">
            <div class="flex-grow-1 ms-2">
                <SfDropDownList @ref="VisitCodeDropDown"
                                TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                                Placeholder="選擇一個值" DataSource="@ListVisitCode"
                                @bind-Value="@SelectVisitCode" class="flex-grow-1">
                    <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                    <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                        ValueChange="@OnVisitCodeChanged"></DropDownListEvents>
                </SfDropDownList>
            </div>
        </div>

    </div>
    @if (data != null)
    {
        <div class="view-container">
            <div>
                @* 新增一筆紀錄按鈕 *@
                <button class="btn btn-primary add-button" 
                @onclick="async () =>await OnAddAsync()">
                    新增一筆紀錄
                </button>
            </div>
            <div class="left-table">
                <table>
                    <tr>
                        <td class="w-20 data-title">
                            Subject No.
                        </td>
                        <td class="w-16 data-title">
                            BSA
                        </td>
                        <td class="w-16 data-title">
                            Regimen<br />
                            Paclitaxel 175 mg/m2
                        </td>
                        <td class="w-16 data-title">
                            Regimen<br />
                            Carboplatin AUC 5
                        </td>
                        <td class="w-16 data-title">
                            Reduction
                        </td>
                        <td class="w-16 data-title">
                            Bevacizumab<br />
                            Kg/mg

                        </td>
                    </tr>
                    @foreach (var item in data.Items)
                    {
                        <tr>
                            <td class="w-20 data-title">
                                @if (editMode)
                                {
                                    <SfDatePicker TValue="DateTime" Format="yyyy-MM-dd"
                                                  @bind-Value="@item.TreatmentDate"></SfDatePicker>
                                }
                                else
                                {
                                    <div class="data-value">
                                        <span class="mx-3 mdi mdi-24px mdi-delete-circle command-icon-width cursor-pointer text-danger"
                                              @onclick="async()=> await OnDeleteAsync(item)"></span>
                                        @item.TreatmentDate.ToString("yyyy-MM-dd")
                                    </div>
                                }
                            </td>
                            <td class="w-16 data-title">
                                @if (editMode)
                                {
                                    <SfTextBox @bind-Value="item.BSA" />
                                }
                                else
                                {
                                    <div class="data-value">
                                        @item.BSA
                                    </div>
                                }
                            </td>
                            <td class="w-16 data-title">
                                @if (editMode)
                                {
                                    <SfTextBox @bind-Value="item.RegimenPaclitaxel" />
                                }
                                else
                                {
                                    <div class="data-value">
                                        @item.RegimenPaclitaxel
                                    </div>
                                }
                            </td>
                            <td class="w-16 data-title">
                                @if (editMode)
                                {
                                    <SfTextBox @bind-Value="item.RegimenCarboplatin" />
                                }
                                else
                                {
                                    <div class="data-value">
                                        @item.RegimenCarboplatin
                                    </div>
                                }
                            </td>
                            <td class="w-16 data-title">
                                @if (editMode)
                                {
                                    <SfTextBox @bind-Value="item.Reduction" />
                                }
                                else
                                {
                                    <div class="data-value">
                                        @item.Reduction
                                    </div>
                                }
                            </td>
                            <td class="w-16 data-title">
                                @if (editMode)
                                {
                                    <SfTextBox @bind-Value="item.Bevacizumab" />
                                }
                                else
                                {
                                    <div class="data-value">
                                        @item.Bevacizumab
                                    </div>
                                }
                            </td>
                        </tr>
                    }

                </table>
            </div>
        </div>
    }
</div>

<VisitCodeAssessmentDateDialog OpenPicker=ShowVisitCodeDialog
                               data=VisitCode
                               OnConfirmCallback=OnVisiteCodeConfirmAsync />

<MessageBox Height="@MessageBox.Height" Width="@MessageBox.Width"
            IsVisible="@MessageBox.IsVisible"
            Title="@MessageBox.Title" Message="@MessageBox.Body"
            Callback="MessageBox.MessageDelegate" />

<ConfirmBox Height="@ConfirmMessageBox.Height" Width="@ConfirmMessageBox.Width"
            IsVisible="@ConfirmMessageBox.IsVisible"
            Title="@ConfirmMessageBox.Title" Message="@ConfirmMessageBox.Body"
            Callback="ConfirmMessageBox.ConfirmDelegate" />

<DialogBackground />

@code {
    [Parameter]
    public string Code { get; set; }

    PatientData patientData = new();
    PatientAdapterModel patientAdapterModel = new();
    bool editMode = false;

    臨床資料化學治療Node data = new();
    臨床資料化學治療 header = new();

    #region 操作 Visit Code 用到的物件
    bool ShowVisitCodeDialog = false;
    ConfirmBoxModel ConfirmMessageBox { get; set; } = new ConfirmBoxModel();
    MessageBoxModel MessageBox { get; set; } = new MessageBoxModel();
    string VisitCodeOperateMode = string.Empty;
    VisitCodeModel VisitCode = new();
    SfDropDownList<DropDownListDataModel, DropDownListDataModel> VisitCodeDropDown;
    DropDownListDataModel SelectVisitCode = new DropDownListDataModel();
    List<DropDownListDataModel> ListVisitCode = new List<DropDownListDataModel>();
    #endregion

    protected override async Task OnInitializedAsync()
    {
        patientAdapterModel = await PatientService.GetAsync(Code);
        patientData.FromJson(patientAdapterModel.JsonData);
        InitData(true);
    }

    void InitData(bool isFirst = true)
    {
        header = patientData.臨床資料.臨床資料化學治療;
        if (isFirst)
        {
            data = header.Items.FirstOrDefault();
            RefreshVisitCode();
            RefreshDropDwonVisitCode();
            var itemx = ListVisitCode.FirstOrDefault(x => x.Key == data?.VisitCode.Id);
            if (itemx != null)
                SelectVisitCode = itemx;
        }
        else
        {
            if (SelectVisitCode != null)
            {
                data = header.Items.FirstOrDefault(x => x.VisitCode.Id == SelectVisitCode.Key);
            }
        }
    }

    void OnChangeEditMode()
    {
        editMode = !editMode;
    }

    async Task OnSave()
    {
        patientAdapterModel.JsonData = patientData.ToJson();
        await PatientService.UpdateAsync(patientAdapterModel);
        editMode = false;
    }

    async Task OnCancel()
    {
        patientData.FromJson(patientAdapterModel.JsonData);
        InitData(false);
        editMode = false;
    }

    async Task OnAddAsync()
    {
        data.Items.Add(new 臨床資料化學治療Item());
        await OnSave();
    }
  
    async Task OnDeleteAsync(臨床資料化學治療Item item)
    {
        // Assuming we need to remove the last item for deletion
        if (data.Items.Count > 0)
        {
            data.Items.Remove(item);
            await OnSave();
        }
    }


    #region 針對 VisitCode 的方法
    void OnAddVisiteCode()
    {
        VisitCode = new();
        VisitCodeOperateMode = "Add";
        ShowVisitCodeDialog = true;
    }

    void OnEditVisiteCode()
    {

        VisitCode = header.Items.FirstOrDefault(x => x.VisitCode.Id == SelectVisitCode.Key)?.VisitCode;
        VisitCodeOperateMode = "Edit";
        ShowVisitCodeDialog = true;
    }

    async Task OnVisiteCodeDeleteAsync()
    {
        if (SelectVisitCode != null)
        {
            var checkTask = await ConfirmMessageBox.ShowAsync("400px", "200px", "警告",
                 $"確認要刪除這筆 Visit Code ({SelectVisitCode.Name}) 紀錄嗎?", ConfirmMessageBox.HiddenAsync);
            if (checkTask)
            {
                var itemDelete = header.Items.FirstOrDefault(x => x.VisitCode.Id == SelectVisitCode.Key);
                if (itemDelete != null)
                {
                    SelectVisitCode = null;
                    data = null;
                    header.Items.Remove(itemDelete);
                    patientAdapterModel.JsonData = patientData.ToJson();
                    await PatientService.UpdateAsync(patientAdapterModel);
                    RefreshVisitCode();
                    RefreshDropDwonVisitCode();
                }
            }
        }
        ShowVisitCodeDialog = false;
    }

    private async Task OnVisitCodeChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value != null)
        {
            var item = header.Items.FirstOrDefault(x => x.VisitCode.Id == args.Value.Key);
            if (item != null)
            {
                data = item;
            }
        }
    }

    void RefreshVisitCode(bool reset = true)
    {
        #region VisitCode
        {
            ListVisitCode.Clear();
            if (data != null)
            {

            }
            foreach (var nodeItem in header.Items)
            {
                ListVisitCode.Add(new DropDownListDataModel()
                    {
                        Key = nodeItem.VisitCode.Id,
                        Name = nodeItem.VisitCode.VisitCodeTitle,
                    });
            }
            if (reset)
            {
                SelectVisitCode = null;
            }
        }
        #endregion
    }
    void RefreshDropDwonVisitCode()
    {
        // 重置選擇項目
        SelectVisitCode = null;

        // 手動刷新 DropDownList 元件
        if (VisitCodeDropDown != null)
        {
            InvokeAsync(() => VisitCodeDropDown.RefreshDataAsync());
        }
    }

    async Task OnVisiteCodeConfirmAsync(VisitCodeModel visitCodeModel)
    {
        if (VisitCodeOperateMode == "Add")
        {
            var newRecord = new 臨床資料化學治療Node()
                {
                    VisitCode = visitCodeModel,
                };
            header.Items.Add(newRecord);
            patientData.SyncData();
            patientAdapterModel.JsonData = patientData.ToJson();
            await PatientService.UpdateAsync(patientAdapterModel);
            RefreshVisitCode();
            RefreshDropDwonVisitCode();
        }
        else if (VisitCodeOperateMode == "Edit")
        {
            var editItem = header.Items.FirstOrDefault(x => x.VisitCode.Id == visitCodeModel.Id);
            if (editItem != null)
            {
                data.VisitCode.AssessmentDate = visitCodeModel.AssessmentDate;
                data.VisitCode.CycleMonth = visitCodeModel.CycleMonth;
                data.VisitCode.Timeline = visitCodeModel.Timeline;
                patientAdapterModel.JsonData = patientData.ToJson();
                await PatientService.UpdateAsync(patientAdapterModel);
                RefreshVisitCode(false);
                RefreshDropDwonVisitCode();
                var foo = ListVisitCode.FirstOrDefault(x => x.Key == visitCodeModel.Id);
                if (foo != null)
                {
                    SelectVisitCode = foo;
                }
                else
                {
                    SelectVisitCode = null;
                }
            }
        }
        ShowVisitCodeDialog = false;

    }
    #endregion
}
