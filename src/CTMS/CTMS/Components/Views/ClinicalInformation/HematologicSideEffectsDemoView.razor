@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@inject NavigationManager NavigationManager
@inject PatientService PatientService
@inject DropDownListDataService DropDownListDataService
@inject SideEffectsService SideEffectsService

<PageTitle>血液副作用 (Adverse event)</PageTitle>

<div>
    <div class="header">
        <div>
            <h1>血液副作用 (Adverse Event)</h1>
            @* <div class="code">S-20250520074124</div> *@
        </div>
    </div>

    <div class="visit-code-container d-flex align-items-center">
        <div class="visit-info me-3">Visit Code :</div>
        <div class="flex-grow-1">
            <SfDropDownList @ref="VisitCodeDropDown"
                            TValue="DropDownListDataModel" TItem="DropDownListDataModel"
                            Placeholder="選擇一個值" DataSource="@ListVisitCode"
                            @bind-Value="@SelectVisitCode" class="w-100">
                <DropDownListFieldSettings Value="Key" Text="Name"></DropDownListFieldSettings>
                <DropDownListEvents TItem="DropDownListDataModel" TValue="DropDownListDataModel"
                                    ValueChange="@OnVisitCodeChanged"></DropDownListEvents>
            </SfDropDownList>
        </div>
    </div>

    @if (data != null)
    {
        <table>
            <thead>
                <tr>
                    <th></th>
                    <th>White blood cell<br>白血球</th>
                    <th>Neutrophil count<br>絕對嗜中性白血球數</th>
                    <th>hemoglobin (Hb)<br>血色素</th>
                    <th>Platelet count<br>血小板</th>
                </tr>
            </thead>
            <tbody>
                <tr class="grade-1">
                    <td class="grade-col">grade 1</td>
                    <td><span class="@data.WhiteBloodCell白血球.Grade1.ApplyCssClass">@data.WhiteBloodCell白血球.Grade1.Title</span></td>
                    <td><span class="@data.NeutrophilCount絕對嗜中性白血球數.Grade1.ApplyCssClass">@data.NeutrophilCount絕對嗜中性白血球數.Grade1.Title</span></td>
                    <td><span class="@data.HemoglobinHb血色素.Grade1.ApplyCssClass">@data.HemoglobinHb血色素.Grade1.Title</span></td>
                    <td><span class="@data.PlateletCount血小板.Grade1.ApplyCssClass">@data.PlateletCount血小板.Grade1.Title</span></td>
                </tr>
                <tr class="grade-2">
                    <td class="grade-col">grade 2</td>
                    <td><span class="@data.WhiteBloodCell白血球.Grade2.ApplyCssClass">@data.WhiteBloodCell白血球.Grade2.Title</span></td>
                    <td><span class="@data.NeutrophilCount絕對嗜中性白血球數.Grade2.ApplyCssClass">@data.NeutrophilCount絕對嗜中性白血球數.Grade2.Title</span></td>
                    <td><span class="@data.HemoglobinHb血色素.Grade2.ApplyCssClass">@data.HemoglobinHb血色素.Grade2.Title</span></td>
                    <td><span class="@data.PlateletCount血小板.Grade2.ApplyCssClass">@data.PlateletCount血小板.Grade2.Title</span></td>
                </tr>
                <tr class="grade-3">
                    <td class="grade-col">grade 3</td>
                    <td><span class="@data.WhiteBloodCell白血球.Grade3.ApplyCssClass">@data.WhiteBloodCell白血球.Grade3.Title</span></td>
                    <td><span class="@data.NeutrophilCount絕對嗜中性白血球數.Grade3.ApplyCssClass">@data.NeutrophilCount絕對嗜中性白血球數.Grade3.Title</span></td>
                    <td><span class="@data.HemoglobinHb血色素.Grade3.ApplyCssClass">@data.HemoglobinHb血色素.Grade3.Title</span></td>
                    <td><span class="@data.PlateletCount血小板.Grade3.ApplyCssClass">@data.PlateletCount血小板.Grade3.Title</span></td>
                </tr>
                <tr class="grade-4">
                    <td class="grade-col">grade 4</td>
                    <td><span class="@data.WhiteBloodCell白血球.Grade4.ApplyCssClass">@data.WhiteBloodCell白血球.Grade4.Title</span></td>
                    <td><span class="@data.NeutrophilCount絕對嗜中性白血球數.Grade4.ApplyCssClass">@data.NeutrophilCount絕對嗜中性白血球數.Grade4.Title</span></td>
                    <td><span class="@data.HemoglobinHb血色素.Grade4.ApplyCssClass">@data.HemoglobinHb血色素.Grade4.Title</span></td>
                    <td><span class="@data.PlateletCount血小板.Grade4.ApplyCssClass">@data.PlateletCount血小板.Grade4.Title</span></td>
                </tr>
                <tr class="grade-5">
                    <td class="grade-col">grade 5</td>
                    <td><span class="@data.WhiteBloodCell白血球.Grade5.ApplyCssClass">@data.WhiteBloodCell白血球.Grade5.Title</span></td>
                    <td><span class="@data.NeutrophilCount絕對嗜中性白血球數.Grade5.ApplyCssClass">@data.NeutrophilCount絕對嗜中性白血球數.Grade5.Title</span></td>
                    <td><span class="@data.HemoglobinHb血色素.Grade5.ApplyCssClass">@data.HemoglobinHb血色素.Grade5.Title</span></td>
                    <td><span class="@data.PlateletCount血小板.Grade5.ApplyCssClass">@data.PlateletCount血小板.Grade5.Title</span></td>
                </tr>
            </tbody>
        </table>
    }
</div>

<MessageBox Height="@MessageBox.Height" Width="@MessageBox.Width"
            IsVisible="@MessageBox.IsVisible"
            Title="@MessageBox.Title" Message="@MessageBox.Body"
            Callback="MessageBox.MessageDelegate" />

<ConfirmBox Height="@ConfirmMessageBox.Height" Width="@ConfirmMessageBox.Width"
            IsVisible="@ConfirmMessageBox.IsVisible"
            Title="@ConfirmMessageBox.Title" Message="@ConfirmMessageBox.Body"
            Callback="ConfirmMessageBox.ConfirmDelegate" />

<DialogBackground />

@code {
    [Parameter]
    public string Code { get; set; }

    PatientData patientData = new();
    PatientAdapterModel patientAdapterModel = new();
    bool editMode = false;
    HematologicSideEffects血液副作用Node data = new();
    HematologicSideEffects血液副作用 header = new();

    List<DropDownListDataModel> ListCardiovascularIncludeHtnYesNo = new List<DropDownListDataModel>();
    List<string> ListYesNo = new List<string>();

    #region 操作 Visit Code 用到的物件
    bool ShowVisitCodeDialog = false;
    ConfirmBoxModel ConfirmMessageBox { get; set; } = new ConfirmBoxModel();
    MessageBoxModel MessageBox { get; set; } = new MessageBoxModel();
    string VisitCodeOperateMode = string.Empty;
    VisitCodeModel VisitCode = new();
    SfDropDownList<DropDownListDataModel, DropDownListDataModel> VisitCodeDropDown;
    DropDownListDataModel SelectVisitCode = new DropDownListDataModel();
    List<DropDownListDataModel> ListVisitCode = new List<DropDownListDataModel>();
    #endregion

    protected override async Task OnInitializedAsync()
    {
        patientAdapterModel = await PatientService.GetAsync(Code);
        patientData.FromJson(patientAdapterModel.JsonData);

        // if (patientData.臨床資訊.SubjectNo == "NCKUH-E001" ||
        // patientData.臨床資訊.SubjectNo == "NCKUH-C001")
        // {
        //     data = new HematologicSideEffects血液副作用Node();
        //     SideEffectsService.ComputeGradeByDemo(patientData.臨床資訊.SubjectNo, data);
        // }
        // else
        // {
        //     InitData();
        // }
        InitData();
    }

    void InitData(bool isFirst = true)
    {
        header = patientData.臨床資料.HematologicSideEffects血液副作用;
        if (isFirst)
        {
            data = header.Items.FirstOrDefault();
            RefreshVisitCode();
            RefreshDropDwonVisitCode();
            var itemx = ListVisitCode.FirstOrDefault(x => x.Key == data?.VisitCode.Id);
            if (itemx != null)
                SelectVisitCode = itemx;
        }
        else
        {
            if (SelectVisitCode != null)
            {
                data = header.Items.FirstOrDefault(x => x.VisitCode.Id == SelectVisitCode.Key);
            }
        }
    }

    #region 針對 VisitCode 的方法

    private async Task OnVisitCodeChanged(ChangeEventArgs<DropDownListDataModel, DropDownListDataModel> args)
    {
        if (args.Value != null)
        {
            var item = header.Items.FirstOrDefault(x => x.VisitCode.Id == args.Value.Key);
            if (item != null)
            {
                data = item;
            }
        }
    }

    void RefreshVisitCode(bool reset = true)
    {
        #region VisitCode
        {
            ListVisitCode.Clear();
            if (data != null)
            {

            }
            foreach (var nodeItem in header.Items)
            {
                ListVisitCode.Add(new DropDownListDataModel()
                {
                    Key = nodeItem.VisitCode.Id,
                    Name = nodeItem.VisitCode.VisitCodeTitle,
                });
            }
            if (reset)
            {
                SelectVisitCode = null;
            }
        }
        #endregion
    }

    void RefreshDropDwonVisitCode()
    {
        // 重置選擇項目
        SelectVisitCode = null;

        // 手動刷新 DropDownList 元件
        if (VisitCodeDropDown != null)
        {
            InvokeAsync(() => VisitCodeDropDown.RefreshDataAsync());
        }
    }
    #endregion

}
