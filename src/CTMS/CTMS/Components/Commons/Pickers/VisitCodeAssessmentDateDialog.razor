@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons

<SfDialog @bind-Visible="@OpenPicker" IsModal="true"
          Width="95%" Height="100%" CssClass="dialogSize">
    <DialogTemplates>
        <Header>@DialogTitle</Header>
        <Content>
            <VisitCodeAssessmentDateView />
        </Content>
        <FooterTemplate>
            <SfButton @onclick="@OnPickerOK" CssClass='e-primary'>確認</SfButton>
            <SfButton @onclick="@OnPickerCancel" CssClass='e-secondary'>取消</SfButton>
        </FooterTemplate>
    </DialogTemplates>
    <DialogPositionData X="center" Y="center"></DialogPositionData>
</SfDialog>

<MessageBox Height="400" Width="600" IsVisible="@ShowMessageBox"
            Title="@MessageBoxTitle" Message="@MessageBoxBody"
            Callback="x=>ShowMessageBox =false" />

<DialogBackground />
<DataGridCss />

@code {
    [Parameter]
    public bool OpenPicker { get; set; } = false;
    [Parameter]
    public EventCallback<ProjectAdapterModel> OnConfirmCallback { get; set; }
    string DialogTitle = "設定 Visit Code";
    public bool ShowMessageBox { get; set; } = false;
    public string MessageBoxBody { get; set; } = "";
    public string MessageBoxTitle { get; set; } = "";

    protected override void OnInitialized()
    {
    }

    public void ShowDialog()
    {
        OpenPicker = true;
    }

    async Task OnPickerOK()
    {
        // await OnConfirmCallback.InvokeAsync(CurrentRecord);
        OpenPicker = false;
    }
    async Task OnPickerCancel()
    {
        // await OnConfirmCallback.InvokeAsync(null);
        OpenPicker = false;
    }
}
